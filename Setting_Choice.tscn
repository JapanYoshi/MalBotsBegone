[gd_scene load_steps=6 format=2]

[ext_resource path="res://menuTheme.tres" type="Theme" id=1]
[ext_resource path="res://tiles/PopupMenuTheme.tres" type="Theme" id=2]
[ext_resource path="res://fonts/SWAP_10_Regular.tres" type="DynamicFont" id=3]
[ext_resource path="res://fonts/SWAP_12_Regular.tres" type="DynamicFont" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends PanelContainer
export var option_name: String
export var option_help: String
export var option_array: Array
export var option_i: int
onready var btn = $VBoxContainer/PopupMenu
onready var popup = btn.get_popup()
var first_time = true
# Called when the node enters the scene tree for the first time.
func _ready():
	$VBoxContainer/Name.text = option_name
	if option_help == \"\":
		$VBoxContainer/Help.hide()
	else:
		$VBoxContainer/Help.text = option_help
	
	var i = 0;
	for item in option_array:
		btn.add_item(item)
	btn.select(option_i)
	pass # Replace with function body.

func _input(event):
	if !get_focus_owner() == btn: return
	if event.is_action_pressed(\"ui_left\"):
		accept_event()
		var i = posmod(btn.get_selected() - 1, btn.get_item_count())
		btn.select(i)
		_on_PopupMenu_item_focused(i)
	elif event.is_action_pressed(\"ui_right\"):
		accept_event()
		var i = posmod(btn.get_selected() + 1, btn.get_item_count())
		btn.select(i)
		_on_PopupMenu_item_focused(i)
	elif event.is_action_pressed(\"ui_accept\"):
		accept_event()
		_on_PopupMenu_item_selected(btn.get_selected_id())
	

func _on_PopupMenu_item_focused(index):
	print(\"popup menu item focused: \", index)
	self.find_parent(\"SettingsMenuRoot\").on_choice_focused(index, btn.get_item_count(), option_name)

func _on_PopupMenu_item_selected(index):
	self.find_parent(\"SettingsMenuRoot\").on_choice_chosen(index, btn.get_item_count(), option_name)

func add_item(label, id=-1):
	btn.add_item(label, id)

func get_value():
	return btn.get_selected_id()

func set_value(value: int):
	btn.select(value)

func reload_font(fonts):
	print(\"reloading font in type choice\")
	$VBoxContainer/Name.set(\"custom_fonts/font\", fonts[0])
	$VBoxContainer/Help.set(\"custom_fonts/font\", fonts[2])
	btn.set(\"custom_fonts/font\", fonts[0])
	pass

func grab_focus():
	btn.grab_focus()
"

[node name="Setting_Choice" type="PanelContainer"]
size_flags_horizontal = 3
size_flags_vertical = 12
theme = ExtResource( 1 )
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="."]
margin_left = 12.0
margin_top = 4.0
margin_right = 64.0
margin_bottom = 277.0

[node name="Name" type="Label" parent="VBoxContainer"]
margin_right = 52.0
margin_bottom = 118.0
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 4 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "Setting name"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Help" type="Label" parent="VBoxContainer"]
margin_top = 126.0
margin_right = 52.0
margin_bottom = 232.0
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 3 )
custom_colors/font_color = Color( 0, 0, 0, 0.752941 )
text = "Help text (optional)"
autowrap = true

[node name="PopupMenu" type="OptionButton" parent="VBoxContainer"]
margin_top = 240.0
margin_right = 52.0
margin_bottom = 273.0
theme = ExtResource( 2 )
custom_fonts/font = ExtResource( 4 )
action_mode = 1
[connection signal="item_focused" from="VBoxContainer/PopupMenu" to="." method="_on_PopupMenu_item_focused"]
[connection signal="item_selected" from="VBoxContainer/PopupMenu" to="." method="_on_PopupMenu_item_selected"]
